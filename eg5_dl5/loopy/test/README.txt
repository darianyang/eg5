					Loopy program

1. introduction

loopy is a program for protein loop prediction, sequence mutation, adding missing protein segment. 
if the segment to be predicted already exists, loopy will delete the original segment and predict a new one
to assemble onto the stems. if the segment to be predicted does not exist, you must provide the residue 
sequence of the missing segment and the loopy will predict a segment with the provided residues and assemble
the segment onto the two end stems which should exist. if you want to make mutations to all the residues in a
protein segment, you can also do it with loopy. the loopy will just consider it a normal loop prediction
as in the case where the segment is missing described in the second case above. segment mutation can also
be done using our sidechain prediction program (scap). the difference is that in scap, the backbone is fixed while in loopy the backbone is to be predicted.

the loopy program first builds multiple initial conformations using ab-initio method, each of the 
conformation is then closed using random tweak method. fast energy minimization in torsional angle space 
is then performed (paper under preparation) and sidechain is assembled using scap program. colony energy is used to sort out the best predictions. for details, go to check our loop paper (submitted).

reference:

Xiang,Z; Csoto,C; Honig,B. Evaluating conformtional free energies: the colony energy and its application to
the problem of loop prediction (to be published).


the program can be downloaded from url:

http://trantor.bioc.columbia.edu

any comments, please send to: zx11@columbia.edu

2. how to use the program:


in the directory loopy/test where the executable loopy is in, you should find  a file "model.dir", 
open the file and check if the directory "PDB" and "model library" is right. in normal case, you do not need 
to change these parameters.

in the directory loopy/test, you can just type ./loopy, or ./loopy -h, the program will print out usage
information.

a) example1: protein loop prediction. this is the case where the old loop segment is replaced by new 
predicted loop conformations.

all the output is the pdb file with appendix like: *_loopy_n.pdb, where n is the number starting from 0 and
* is your original input pdb file.

1) loopy -o=17-23  -t=b  -n=1 -i=200 -f -h -s=c ex1.pdb

meaning:

-o=17-23: the loop segment to be predicted is from residue 17 to 23.required.
-f=b: the force field is charmm22, heavy atom only. 
	other choices:
	-f=a: the force field is charmm22, all atom model.
	-f=A: the force field is amber94, all atom model.
	-f=B: the force field is amber94, heavy atom model.
	optional, default is -f=b
-n=1: the number of outputs required.optional, default is -n=1
-f: fast prediction. when -f is off, all the loop candidates are subjected to minimization. otherwise loop
    candidates will not be minimized. optional,default is off
-i=200: the number of initial loop candidates generated by ab-initio method. optioal. default: -i=1000.
-h: print help information. optional. default is off.	
-s=c: mean the segment from 17-23 is to be predicted as coil.
	other choices:
	-s=h: the segment to be predicted as helix;
	-s=e: the segment to be predicted as sheet;
	optional. default is: -s=c


output saved as ex1_loopy_0.pdb


2) loopy -o=43-49  -t=b -i=200 -c=C ex2.pdb
-c=C: meaning the segment to be predicted is on chain 'C'
output saved as ex2_loopy_0.pdb




if the segment to be predicted does not exist or you want to mutate the segment, then you need to 
specify the residue sequence.

segment 17-23 missing in ex3.pdb
3) loopy -o=17-23  -t=b -i=200 -r=KASDFGH ex3.pdb 
-r=KASDFGH: the segment to be predicted with residue KASDFGH.
output saved as ex3_loopy_0.pdb


4) loopy -o=17-23 -f ex4.pdb chiangle.file

chiangle.file: this is the backbone psi, phi file, which should appear after the pdb file. 
	       existence of this file means loop backbone candidates are generated according to
	       the angle specified in the chiangle.file. 

	       for the format of chiangle.file, check chiangle.file in the directory.


if you have any comments or report problems, please send email to jason z. xiang at zx11@columbia.edu. 
